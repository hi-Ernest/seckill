ORM框架
MyBatis特点：参数+SQL = Entity/List

sql写在哪儿? 1.XML提供SQL 2.注解提供SQL


如何DAO接口?
    1.Mapper自动实现DAO接口
    2.API编程方式实现DAO接口

我的收获：
    1.MyBatis更加自由的控制SQL

        查看MyBatis的官方文档

        SELECT * FROM XXX
        SELECT name, count... 优化查询速度,尤其大型数据场景下

        在mybatis-cofing.xml下配置获取数据自增主键、列别名替换列名、驼峰命名转化等等

        级联属性时SQL:---> s.name as "seckill.name",
                          s.number as "seckill_number",
                          s.start_time as "seckill_startTime",
                          s.end_time as "seckill_endTime",

    2.idea的目录结构(Java+resources+test...):Project Structure -> Modules
      格式化代码:ctrl + alt + L

    3.单元测试 shift+ctrl+T 以及注解Junit4和Spring整合 启动Junit4时加载SpringIOC容器



    DAO层工作演变为：接口设计 + SQL编程
                   代码和SQL的分离,方便Review

                   DAO拼接等逻辑在Service层完成


    3.Spring-IOC注入方式和场景
        1) XML context aop mvc
        2) 注解 @Service @Controller
        3)Java配置类


(约定大于配置)
声明式事务:
    1)ProxyFactoryBean + XML
    2)tx:advice + aop 命名空间 ---> 一次配置永久生效
    3)注解@Transactional ---> 推荐

事务方法的嵌套

commit rollback
回滚事务: 当方法遇到运行期异常 ---> rollback
          (将编译期异常 转化成 运行期异常)
          (对于try catch 有时感受不到默认就是commit) ---> 特别需要注意



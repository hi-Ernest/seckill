<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合MyBatis-->
    <!-- 1.配置数据库相关参数properties属性：${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"/>


    <!-- 2.数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!-- 根据业务使用场景配置相关-->
        <!-- 数据库c3p0连接池私有属性-->
        <property name="maxPoolSize" value="30"></property>
        <property name="minPoolSize" value="10"></property>
        <!-- 关闭连接后不自动Commit-->
        <property name="autoCommitOnClose" value="false"></property>
        <!-- 获取连接超时时间 （超时处理 如果连接大于maxPoolSize 需要等待默认是0 相当于死锁）-->
        <property name="checkoutTimeout" value="1000"></property>
        <!-- 获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"></property>
    </bean>


    <!-- 3.配置SqlSessionFactory对象-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池-->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置MyBatis全局文件：mybatis-cofig.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 配置扫描entity包 使用别名 org.seckill.entity.Seckill -> Seckill -->
        <property name="typeAliasesPackage" value="org.seckill.entity"></property>
        <!-- 扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 4.配置扫描Dao接口包,动态实现Dao接口,注入Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 给出需要扫描的Dao包-->
        <property name="basePackage" value="org.seckill.dao"></property>
    </bean>

    <!-- RedisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>

</beans>